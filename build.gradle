plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.8.4'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

repositories {
	mavenLocal()
	jcenter()
	maven { url = "https://jitpack.io"}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.github.vampire-studios:VampireLib-Fabric:${project.vampirelib_version}"
	include "com.github.vampire-studios:VampireLib-Fabric:${project.vampirelib_version}"

	modApi("me.sargunvohra.mcmods:autoconfig1u:3.3.1") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.sargunvohra.mcmods:autoconfig1u:3.3.1"

	modApi("me.shedaniel.cloth:config-2:4.8.2") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.shedaniel.cloth:config-2:4.8.2"

	modImplementation "com.lettuce.fudge:artifice:${project.artifice_version}"
	include "com.lettuce.fudge:artifice:${project.artifice_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

def pomConfig = {
	licenses {
		license {
			name "MIT"
		}
	}
	developers {
		developer {
			id "oliviathevampire"
			name "OliviaTheVampire"
			email ""
		}
		developer {
			id "catcore"
			name "Arthur Roussel"
			email "arthur.bambou@gmail.com"
		}
	}

	scm {
		url "https://github.com/vampire-studios/Randomly-Adding-Anything-Core"
	}
}

bintray {
	user = project.hasProperty('bintray_user') ? project.property('bintray_user') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintray_api_key') ? project.property('bintray_api_key') : System.getenv('BINTRAY_KEY')
	publications = ["MavenPublication"]
	publish = true //[Default: false] Whether version should be auto published after an upload
	pkg {
		userOrg = "vampirestudios"
		repo = "Minecraft-Libs"
		name = archivesBaseName
		desc = "The base module and API of Randomly Adding Anything"
		websiteUrl = "https://github.com/vampire-studios/Randomly-Adding-Anything-Core"
		issueTrackerUrl = "https://github.com/vampire-studios/Randomly-Adding-Anything-Core/issues"
		licenses = ["MIT"]
		githubRepo = "vampire-studios/Randomly-Adding-Anything-Core"
		vcsUrl = "https://github.com/vampire-studios/Randomly-Adding-Anything-Core.git"
		version {
			name = version
			released = new Date()
		}
	}

}

// configure the maven publication
publishing {
	publications {
		MavenPublication(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				classifier = "sources"
				builtBy remapSourcesJar
			}
			groupId group
			artifactId archivesBaseName
			version version
			pom.withXml {
				def root = asNode()
				root.appendNode('description', "The base module and API of Randomly Adding Anything")
				root.appendNode('name', archivesBaseName)
				root.appendNode('url', "https://github.com/vampire-studios/Randomly-Adding-Anything-Core")
				root.children().last() + pomConfig
			}
		}
	}

	repositories {}
}

curseforge {
	apiKey = System.getenv('CURSEKEY') ?: "a key"
	project {
		id = "341464"
		releaseType = "release"
		changelog = project.changelog
		gameVersionStrings.clear()
		gameVersionStrings.add("1.16.3")
		gameVersionStrings.add("Fabric")
		mainArtifact(file("build/libs/${archivesBaseName}-${version}.jar")) {
			displayName = "[" + project.minecraft_version + "] Core " + project.mod_version
			relations {
				requiredDependency "fabric-api"
				embeddedLibrary "vampirelib"
				embeddedLibrary "cloth-config"
				embeddedLibrary "auto-config-updated-api"
				optionalDependency "modupdater"
			}
		}
	}
	options{
		forgeGradleIntegration = false
	}
}

bintrayUpload.dependsOn build
bintrayUpload.dependsOn generatePomFileForMavenPublicationPublication