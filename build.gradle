plugins {
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.9.+'
}

repositories {
	mavenLocal()
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.siphalor.de" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = 'https://maven.quiltmc.org/repository/release' }
	maven { url = 'https://maven.quiltmc.org/repository/snapshot' }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://jitpack.io" }
	maven { url = "https://mvn.devos.one/snapshots/" }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = project.archives_base_name
version = "${libs.versions.version.get()}+build.${libs.versions.build.get()}-${libs.versions.minecraft.get()}"
group = project.maven_group

configurations.configureEach {
	resolutionStrategy {
		force("net.fabricmc.fabric-api:fabric-api:0.85.0+1.19.4")
		force("net.fabricmc:fabric-loader:0.14.21")
	}
}

dependencies {
	minecraft libs.minecraft
	mappings loom.layered {
		it.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2")
		it.parchment("org.parchmentmc.data:parchment-1.19.4:${libs.versions.parchment.get()}@zip")
		it.officialMojangMappings()
	}

	modImplementation libs.fabric.loader

	modImplementation libs.fabric.api

	modImplementation(libs.vampirelib)
	include(libs.vampirelib)

	modApi("com.terraformersmc:modmenu:6.2.3") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi("me.shedaniel.cloth:cloth-config-fabric:10.1.105") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi("io.github.vampirestudios:artifice:0.40.0+build.1-1.19.3-EXPERIMENTAL") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand 'version': version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	it.options.encoding = 'UTF-8'
}

java {
	withSourcesJar()
	toolchain.languageVersion = JavaLanguageVersion.of(17)
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	it.options.encoding = 'UTF-8'
}

compileJava {
	options.compilerArgs += '--enable-preview'
}

publishing {
	publications {
		mavenJava( MavenPublication ) {
			from components.java
		}
	}
	repositories {
		if (project.hasProperty("siphalorMavenUser")) {
			maven {
				name = "Siphalor"
				url = "https://maven.siphalor.de/upload.php"
				credentials {
					username = siphalorMavenUser
					password = siphalorMavenPassword
				}
			}
		}
	}
}

modrinth {
	token = modrinthToken
	projectId = "C7pWNmLQ"
	versionNumber = project.version
	versionType = "beta"
	uploadFile = remapJar
	gameVersions = [libs.versions.minecraft.get()]
	loaders = ["fabric"]
	dependencies {
		required.project "P7dR8mSH"
	}
}